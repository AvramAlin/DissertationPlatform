{"ast":null,"code":"var _jsxFileName = \"/Users/alinavram/Desktop/facultate/an III sem I/Tehnologii Web/ProiectWeb/dissertation/src/Components/AlegeProfesor.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst profesoriDummy = [\"Zurini\", \"Toma\", \"Dorian Popa\", \"Miguel\"];\nfunction AlegeProfesor() {\n  _s();\n  const [profesor, setProfesor] = useState(\"\");\n  const [isSent, setIsSent] = useState(false);\n  function handleIsSent() {\n    setIsSent(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => e.preventDefault(),\n    className: \"profesorContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profesorGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"profesor\",\n        children: \"Alegeti profesorul coordonator dorit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"profesor\",\n        value: profesor,\n        onChange: e => setProfesor(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecteaza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), profesoriDummy.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: element,\n          children: element\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"formButton\",\n      onClick: handleIsSent,\n      children: \"Trimite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(AlegeProfesor, \"G7hytm82wEQlNSB/+l+hfaeHIvE=\");\n_c = AlegeProfesor;\nexport default AlegeProfesor;\nvar _c;\n$RefreshReg$(_c, \"AlegeProfesor\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","profesoriDummy","AlegeProfesor","_s","profesor","setProfesor","isSent","setIsSent","handleIsSent","onSubmit","e","preventDefault","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","required","map","element","type","onClick","_c","$RefreshReg$"],"sources":["/Users/alinavram/Desktop/facultate/an III sem I/Tehnologii Web/ProiectWeb/dissertation/src/Components/AlegeProfesor.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst profesoriDummy = [\"Zurini\", \"Toma\", \"Dorian Popa\", \"Miguel\"];\n\nfunction AlegeProfesor() {\n  const [profesor, setProfesor] = useState(\"\");\n  const [isSent, setIsSent] = useState(false);\n\n  function handleIsSent() {\n    setIsSent(true);\n  }\n\n  return (\n    <form onSubmit={(e) => e.preventDefault()} className=\"profesorContainer\">\n      <div className=\"profesorGroup\">\n        <label htmlFor=\"profesor\">Alegeti profesorul coordonator dorit:</label>\n        <select\n          id=\"profesor\"\n          value={profesor}\n          onChange={(e) => setProfesor(e.target.value)}\n          required\n        >\n          <option value=\"\">Selecteaza</option>\n          {profesoriDummy.map((element) => (\n            <option value={element}>{element}</option>\n          ))}\n        </select>\n      </div>\n      <button type=\"submit\" className=\"formButton\" onClick={handleIsSent}>\n        Trimite\n      </button>\n    </form>\n  );\n}\n\nexport default AlegeProfesor;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,cAAc,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC;AAElE,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,SAASU,YAAYA,CAAA,EAAG;IACtBD,SAAS,CAAC,IAAI,CAAC;EACjB;EAEA,oBACEP,OAAA;IAAMS,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE;IAACC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBACtEb,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bb,OAAA;QAAOc,OAAO,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAqC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvElB,OAAA;QACEmB,EAAE,EAAC,UAAU;QACbC,KAAK,EAAEhB,QAAS;QAChBiB,QAAQ,EAAGX,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;QAAAV,QAAA,gBAERb,OAAA;UAAQoB,KAAK,EAAC,EAAE;UAAAP,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACnCjB,cAAc,CAACuB,GAAG,CAAEC,OAAO,iBAC1BzB,OAAA;UAAQoB,KAAK,EAAEK,OAAQ;UAAAZ,QAAA,EAAEY;QAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNlB,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAACd,SAAS,EAAC,YAAY;MAACe,OAAO,EAAEnB,YAAa;MAAAK,QAAA,EAAC;IAEpE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACf,EAAA,CA7BQD,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA+BtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}